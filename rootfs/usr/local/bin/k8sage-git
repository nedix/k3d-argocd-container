#!/usr/bin/env bash

set -e

source /etc/profile

GIT_EMAIL="$(whoami)@k8sage.internal"
GIT_USER=k8sage

start() {
    yellow; echo "Starting GIT daemon..."; normal
    _create_symlinks
    _create_repositories
    refresh_submodules
    LOG_FILE=$(mktemp -u)
    mkfifo "$LOG_FILE"
    run_in_background /usr/bin/git daemon \
        --informative-errors \
        --export-all \
        --access-hook="k8sage-git refresh_submodules 1>/dev/null 2>${LOG_FILE}" \
        --base-path="/mnt/applications" \
        /mnt/applications/.git \
        /mnt/applications/*/.git
    run_in_background tail -f $LOG_FILE
    green; echo "GIT daemon started."; normal
}

stop() {
    yellow; echo "Stopping GIT daemon..."; normal
    kill -TERM $(pgrep git-daemon)
    while pgrep git-daemon > /dev/null; do
        sleep 1
    done
    green; echo "GIT daemon stopped."; normal
}

_create_symlinks() {
    yellow; echo "Creating symlinks..."; normal
    ln -sf {/opt/k8sage/,/opt/k8sage/applications/example/} /mnt/applications/
    green; echo "Symlinks created."; normal
}

_create_repositories() {
    yellow; echo "Creating repositories..."; normal

    yellow; echo "Creating repository for '/mnt/applications/'..."; normal
    cd /mnt/applications/
    git init -b main
    git -c user.name="$GIT_USER" -c user.email="$GIT_EMAIL" commit --allow-empty -m "Initial commit"

    for REPO in /mnt/applications/{k8sage,example}/; do
        yellow; echo "Creating repository for '$REPO'..."; normal
        cd "$REPO"
        git init -b main
        git add -A
        git -c user.name="$GIT_USER" -c user.email="$GIT_EMAIL" commit -m "Initial commit"
    done
    green; echo "Repositories created."; normal
}

refresh_submodules() {
    if [[ -n "$GIT_DIR" && "$PWD" != "/mnt/applications/.git" ]]; then
        return
    else
        unset GIT_DIR
    fi

    yellow; echo "Refreshing submodules..."; normal

    cd /mnt/applications/k8sage/

    if ! git diff --quiet --exit-code cluster-config/argo/applications.yaml; then
        yellow; echo "Committing application config..."; normal
        git add cluster-config/argo/applications.yaml
        git -c user.name="$GIT_USER" -c user.email="$GIT_EMAIL" commit -m "Update application config."
    fi

    cd /mnt/applications/

    for SUBMODULE_PATH in /mnt/applications/*; do
        if [[ ! -d "${SUBMODULE_PATH}/.git" || -L "${SUBMODULE_PATH}" ]]; then
            continue
        fi

        local SUBMODULE="$(basename $SUBMODULE_PATH)"

        if ! git submodule status --quiet "$SUBMODULE" 2> /dev/null; then
            yellow; echo "Adding submodule '${SUBMODULE_PATH}'..."; normal
            touch .gitmodules
            git submodule add --force "git://host.k3d.internal/${SUBMODULE}" "$SUBMODULE"
        fi
    done

    for SUBMODULE_PATH in $(git submodule --quiet foreach "echo $sm_path" || echo ""); do
        if [ ! -d "${SUBMODULE_PATH}/.git" ]; then
            yellow; echo "Removing submodule '${SUBMODULE_PATH}'..."; normal
            git submodule deinit "$SUBMODULE_PATH"
        fi
    done

    if ! git diff --quiet --exit-code --staged; then
        yellow; echo "Committing submodules..."; normal
        git -c user.name="$GIT_USER" -c user.email="$GIT_EMAIL" commit -m "Update submodules."
    fi

    green; echo "Submodules refreshed."; normal
}

if [ "${BASH_SOURCE[0]}" = "$0" ]; then "$1" "${@:2}"; fi
